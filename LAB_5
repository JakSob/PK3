#include <iostream>
#include <fstream>
#include <vector>

template <typename T>
class PlikowaTablica {
private:
    std::vector<T> dane;
    std::string nazwaPliku;
    std::fstream plik;

public:
    PlikowaTablica(const std::string& nazwaPliku) : nazwaPliku(nazwaPliku) {
        plik.open(nazwaPliku, std::ios::in | std::ios::out | std::ios::app);
        if (!plik.is_open()) {
            throw std::runtime_error("Nie udało się otworzyć pliku: " + nazwaPliku);
        }

        wczytajZPliku();
    }

    ~PlikowaTablica() {
        zapiszDoPliku();
        plik.close();
    }

    void dodaj(const T& wartosc) {
        dane.push_back(wartosc);
    }

    T& operator[](std::size_t indeks) {
        if (indeks >= dane.size()) {
            throw std::out_of_range("Indeks poza zakresem");
        }
        return dane[indeks];
    }

private:
    void wczytajZPliku() {
        plik.seekg(0, std::ios::beg);

        T wartosc;
        while (plik >> wartosc) {
            dane.push_back(wartosc);
        }
    }

    void zapiszDoPliku() {
        plik.seekp(0, std::ios::beg);

        for (const T& wartosc : dane) {
            plik << wartosc << " ";
        }
    }
};

class RAIIFile {
private:
    std::fstream plik;
    std::string nazwaPliku;

public:
    RAIIFile(const std::string& nazwaPliku) : nazwaPliku(nazwaPliku) {
        plik.open(nazwaPliku, std::ios::in | std::ios::out | std::ios::app);
        if (!plik.is_open()) {
            throw std::runtime_error("Nie udało się otworzyć pliku: " + nazwaPliku);
        }
    }

    ~RAIIFile() {
        plik.close();
    }
};

template <typename T>
class SmartPointer {
private:
    T* ptr;

public:
    SmartPointer(T* p) : ptr(p) {}

    ~SmartPointer() {
        delete ptr;
    }

    T& operator*() const {
        return *ptr;
    }

    T* operator->() const {
        return ptr;
    }
};

int main() {
    try {
        PlikowaTablica<int> tablica("dane.txt");
        tablica.dodaj(42);
        tablica.dodaj(17);

        std::cout << "Element o indeksie 0: " << tablica[0] << std::endl;
        std::cout << "Element o indeksie 1: " << tablica[1] << std::endl;

        RAIIFile plikRAII("plik_raii.txt");

        SmartPointer<char> smartPointer(new char('A'));
        std::cout << "Element: " << *smartPointer << std::endl;

    } catch (const std::exception& e) {
        std::cerr << "Wyjątek: " << e.what() << std::endl;
        return 1;
    }

    return 0;
}
